import datetime
import calendar
import random
import numpy
import pandas as pd

products = {
  'Galaxy Z Fold3 5G': [159990, 3],
  'Galaxy S21 Ultra 5G': [89990, 4],
  'Galaxy A32': [18990, 8],
  'Galaxy S20 FE': [45990,5],
  'Galaxy Z Flip': [64990, 4],
  'Galaxy Note20': [69990,4],
  'Galaxy A72': [37990, 5],
  'Galaxy M32': [22990, 5],
  'Galaxy A12': [10990, 7],
  'Galaxy A22': [17990, 6],
  'Чехол-накладка Smart LED Cover S21+': [4990, 30],
  'Беспроводное зарядное устройство EP-P1300': [2490, 30],
  'Беспроводное зарядное устройство EP-P4300': [4990, 30],
  'Внешний аккумулятор 10 А·ч с беспроводной зарядкой': [4490, 30],
  'Электронное перо S Pen Note20': [2990, 26],
  'Чехол Silicone Cover with Ring Z Flip3': [4490, 19],
  'Чехол Clear Cover with Ring Z Flip3': [3490, 22],
}

columns = ['Номер Заказа', 'Товар', 'Колличество товаров в заказе', 'Цена', 'Дата', 'Адрес']

def generate_random_time(month):
  day = generate_random_day(month)
  if random.random() < 0.5:
    date = datetime.datetime(2020, month, day,12,00)
  else:
    date = datetime.datetime(2020, month, day,20,00)
  time_offset = numpy.random.normal(loc=0.0, scale=180)
  final_date = date + datetime.timedelta(minutes=time_offset)
  return final_date.strftime("%d/%m/%y %H:%M")

def generate_random_day(month):
  day_range = calendar.monthrange(2020,month)[1]
  return random.randint(1,day_range)

def generate_random_address():
  street_names = ['Центральная', 'Молодежная', 'Лесная', 'Садовая', 'Советская', 'Новая', 'Заречная', 'Зеленая', 'Ленина', 'Мира', 'Набережная', 'Школьная']
  cities = ['г. Москва', 'г. Санкт-Петербург', 'г. Новосибирск', 'г. Екатеринбург', 'г. Казань', 'г. Нижний Новгород', 'г. Челябинск', 'г. Самара', 'г. Омск', 'г. Ростов-на-Дону']
  weights = [9,4,5,2,3,3,2,0.5,6,3]
  zips = ['143362', '354340', '347340', '140200', '143600', '215100', '97035', '169200', '142180', '98101']

  street = random.choice(street_names)
  index = random.choices(range(len(cities)), weights=weights)[0]

  return f"{street}, {random.randint(1,100)}, {cities[index]}, Россия, {zips[index]}"

def create_data_csv():
  pass

def write_row(order_number, product, order_date, address):
  product_price = products[product][0]
  quantity = numpy.random.geometric(p=1.0-(1.0/product_price), size=1)[0]
  output = [order_number, product, quantity, product_price, order_date, address]
  return output

if __name__ == '__main__':
  order_number = 141234
  for month in range(1,13):
    if month <= 10:
      orders_amount = int(numpy.random.normal(loc=12000, scale=4000))
    elif month == 11:
      orders_amount = int(numpy.random.normal(loc=20000, scale=3000))
    else: # month == 12
      orders_amount = int(numpy.random.normal(loc=26000, scale=3000))

    product_list = [product for product in products]
    weights = [products[product][1] for product in products]

    df = pd.DataFrame(columns=columns)
    print(orders_amount)

    i = 0
    while orders_amount > 0:

      address = generate_random_address()
      order_date = generate_random_time(month)

      product_choice = random.choices(product_list, weights)[0]
      df.loc[i] = write_row(order_number, product_choice, order_date, address)
      i += 1

      # Эта часть симулирует несколько товаров в одном заказе
      
      if product_choice == 'Galaxy Note20':
        if random.random() < 0.15:
          df.loc[i] = write_row(order_number, 'Электронное перо S Pen Note20', order_date, address)
          i += 1
        if random.random() < 0.05:
          df.loc[i] = write_row(order_number, 'Чехол Clear Cover with Ring Z Flip3', order_date, address)
          i += 1

        if random.random() < 0.07:
          df.loc[i] = write_row(order_number, 'Беспроводное зарядное устройство EP-P1300', order_date, address)
          i += 1 

      elif product_choice == 'Galaxy S21 Ultra 5G':
        if random.random() < 0.18:
          df.loc[i] = write_row(order_number, 'Чехол-накладка Smart LED Cover S21+', order_date, address)
          i += 1
        if random.random() < 0.04:
          df.loc[i] = write_row(order_number, 'Беспроводное зарядное устройство EP-P4300', order_date, address)
          i += 1
        if random.random() < 0.07:
          df.loc[i] = write_row(order_number, 'Чехол Silicone Cover with Ring Z Flip3', order_date, address)
          i += 1 

      if random.random() <= 0.02:
        product_choice = random.choices(product_list, weights)[0]
        df.loc[i] = write_row(order_number, product_choice, order_date, address)
        i += 1

      if random.random() <= 0.002:
        df.loc[i] = columns
        i += 1

      if random.random() <= 0.003:
        df.loc[i] = ["","","","","",""]
        i += 1

      order_number += 1
      orders_amount -= 1

    month_name = calendar.month_name[month]
    df.to_csv(f"Отчет по продажам_{month_name}_2020.csv", index=False)
    print(f"{month_name} Complete")
